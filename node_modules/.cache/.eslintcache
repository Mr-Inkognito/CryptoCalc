[{"C:\\Users\\Michal\\Desktop\\TW\\CryptoCalc\\src\\index.js":"1","C:\\Users\\Michal\\Desktop\\TW\\CryptoCalc\\src\\App.js":"2","C:\\Users\\Michal\\Desktop\\TW\\CryptoCalc\\src\\components\\NavBar.js":"3","C:\\Users\\Michal\\Desktop\\TW\\CryptoCalc\\src\\components\\CoinListAll.js":"4","C:\\Users\\Michal\\Desktop\\TW\\CryptoCalc\\src\\components\\Notice.js":"5","C:\\Users\\Michal\\Desktop\\TW\\CryptoCalc\\src\\components\\CoinListBook.js":"6","C:\\Users\\Michal\\Desktop\\TW\\CryptoCalc\\src\\components\\CoinListInvested.js":"7","C:\\Users\\Michal\\Desktop\\TW\\CryptoCalc\\src\\components\\Coin.js":"8","C:\\Users\\Michal\\Desktop\\TW\\CryptoCalc\\src\\components\\PlaceholderSpec.js":"9","C:\\Users\\Michal\\Desktop\\TW\\CryptoCalc\\src\\components\\CoinSpec.js":"10","C:\\Users\\Michal\\Desktop\\TW\\CryptoCalc\\src\\components\\Placeholder.js":"11","C:\\Users\\Michal\\Desktop\\TW\\CryptoCalc\\src\\components\\Popup.js":"12","C:\\Users\\Michal\\Desktop\\TW\\CryptoCalc\\src\\components\\Dropdown.js":"13","C:\\Users\\Michal\\Desktop\\tw\\CryptoCalc\\src\\index.js":"14","C:\\Users\\Michal\\Desktop\\tw\\CryptoCalc\\src\\App.js":"15","C:\\Users\\Michal\\Desktop\\tw\\CryptoCalc\\src\\components\\CoinListAll.js":"16","C:\\Users\\Michal\\Desktop\\tw\\CryptoCalc\\src\\components\\CoinListBook.js":"17","C:\\Users\\Michal\\Desktop\\tw\\CryptoCalc\\src\\components\\Notice.js":"18","C:\\Users\\Michal\\Desktop\\tw\\CryptoCalc\\src\\components\\NavBar.js":"19","C:\\Users\\Michal\\Desktop\\tw\\CryptoCalc\\src\\components\\CoinListInvested.js":"20","C:\\Users\\Michal\\Desktop\\tw\\CryptoCalc\\src\\components\\Placeholder.js":"21","C:\\Users\\Michal\\Desktop\\tw\\CryptoCalc\\src\\components\\PlaceholderSpec.js":"22","C:\\Users\\Michal\\Desktop\\tw\\CryptoCalc\\src\\components\\Dropdown.js":"23","C:\\Users\\Michal\\Desktop\\tw\\CryptoCalc\\src\\components\\Coin.js":"24","C:\\Users\\Michal\\Desktop\\tw\\CryptoCalc\\src\\components\\CoinSpec.js":"25","C:\\Users\\Michal\\Desktop\\tw\\CryptoCalc\\src\\components\\Popup.js":"26","C:\\Users\\Michal\\Desktop\\git\\CryptoCalc\\src\\index.js":"27","C:\\Users\\Michal\\Desktop\\git\\CryptoCalc\\src\\App.js":"28","C:\\Users\\Michal\\Desktop\\git\\CryptoCalc\\src\\components\\Notice.js":"29","C:\\Users\\Michal\\Desktop\\git\\CryptoCalc\\src\\components\\CoinListAll.js":"30","C:\\Users\\Michal\\Desktop\\git\\CryptoCalc\\src\\components\\CoinListBook.js":"31","C:\\Users\\Michal\\Desktop\\git\\CryptoCalc\\src\\components\\CoinListInvested.js":"32","C:\\Users\\Michal\\Desktop\\git\\CryptoCalc\\src\\components\\NavBar.js":"33","C:\\Users\\Michal\\Desktop\\git\\CryptoCalc\\src\\components\\Placeholder.js":"34","C:\\Users\\Michal\\Desktop\\git\\CryptoCalc\\src\\components\\Coin.js":"35","C:\\Users\\Michal\\Desktop\\git\\CryptoCalc\\src\\components\\PlaceholderSpec.js":"36","C:\\Users\\Michal\\Desktop\\git\\CryptoCalc\\src\\components\\Dropdown.js":"37","C:\\Users\\Michal\\Desktop\\git\\CryptoCalc\\src\\components\\CoinSpec.js":"38","C:\\Users\\Michal\\Desktop\\git\\CryptoCalc\\src\\components\\Popup.js":"39"},{"size":211,"mtime":1623953728634,"results":"40","hashOfConfig":"41"},{"size":2938,"mtime":1624125007109,"results":"42","hashOfConfig":"41"},{"size":2697,"mtime":1624125699669,"results":"43","hashOfConfig":"41"},{"size":1212,"mtime":1624125668600,"results":"44","hashOfConfig":"41"},{"size":288,"mtime":1624125695102,"results":"45","hashOfConfig":"41"},{"size":1515,"mtime":1624125675020,"results":"46","hashOfConfig":"41"},{"size":2064,"mtime":1624125681011,"results":"47","hashOfConfig":"41"},{"size":4899,"mtime":1624125661378,"results":"48","hashOfConfig":"41"},{"size":1114,"mtime":1624106860999,"results":"49","hashOfConfig":"41"},{"size":2908,"mtime":1624125685789,"results":"50","hashOfConfig":"41"},{"size":1179,"mtime":1624125711351,"results":"51","hashOfConfig":"41"},{"size":1079,"mtime":1624125717768,"results":"52","hashOfConfig":"41"},{"size":1349,"mtime":1624125689257,"results":"53","hashOfConfig":"41"},{"size":211,"mtime":1624192769140,"results":"54","hashOfConfig":"55"},{"size":3019,"mtime":1624193656691,"results":"56","hashOfConfig":"55"},{"size":1212,"mtime":1624192769128,"results":"57","hashOfConfig":"55"},{"size":1515,"mtime":1624192769128,"results":"58","hashOfConfig":"55"},{"size":288,"mtime":1624192769133,"results":"59","hashOfConfig":"55"},{"size":2697,"mtime":1624192769132,"results":"60","hashOfConfig":"55"},{"size":2064,"mtime":1624192769130,"results":"61","hashOfConfig":"55"},{"size":1179,"mtime":1624192769135,"results":"62","hashOfConfig":"55"},{"size":1114,"mtime":1624192769135,"results":"63","hashOfConfig":"55"},{"size":1349,"mtime":1624192769131,"results":"64","hashOfConfig":"55"},{"size":4903,"mtime":1624194685020,"results":"65","hashOfConfig":"55"},{"size":2908,"mtime":1624192769130,"results":"66","hashOfConfig":"55"},{"size":1079,"mtime":1624192769136,"results":"67","hashOfConfig":"55"},{"size":211,"mtime":1624695986255,"results":"68","hashOfConfig":"69"},{"size":3019,"mtime":1624695986141,"results":"70","hashOfConfig":"69"},{"size":288,"mtime":1624695986168,"results":"71","hashOfConfig":"69"},{"size":1212,"mtime":1624695986153,"results":"72","hashOfConfig":"69"},{"size":1515,"mtime":1624695986153,"results":"73","hashOfConfig":"69"},{"size":2064,"mtime":1624695986160,"results":"74","hashOfConfig":"69"},{"size":2697,"mtime":1624695986167,"results":"75","hashOfConfig":"69"},{"size":1179,"mtime":1624695986173,"results":"76","hashOfConfig":"69"},{"size":4903,"mtime":1624695986149,"results":"77","hashOfConfig":"69"},{"size":1114,"mtime":1624695986174,"results":"78","hashOfConfig":"69"},{"size":1349,"mtime":1624695986167,"results":"79","hashOfConfig":"69"},{"size":2908,"mtime":1624695986166,"results":"80","hashOfConfig":"69"},{"size":1079,"mtime":1624695986201,"results":"81","hashOfConfig":"69"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"13wnqcp",{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"159crew",{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"114"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lxse14",{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Michal\\Desktop\\TW\\CryptoCalc\\src\\index.js",[],["167","168"],"C:\\Users\\Michal\\Desktop\\TW\\CryptoCalc\\src\\App.js",["169"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport NavBar from './components/NavBar';\r\nimport CoinListAll from './components/CoinListAll';\r\nimport CoinListBook from './components/CoinListBook';\r\nimport CoinListInvested from './components/CoinListInvested';\r\nimport Notice from './components/Notice';\r\nlet curr;\r\n\r\nfunction App() {\r\n\r\n  const [coins, setCoins] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [cur, setcur] = useState(()=>{\r\n    curr = localStorage.getItem(\"curr\");\r\n    if(curr){\r\n      return curr.id;\r\n    }\r\n    else{\r\n      return \"usd\";\r\n    }\r\n  })\r\n  const [book, setbook] = useState(false);\r\n  const [invested, setinvested] = useState(false);\r\n\r\n\r\n\r\n  const changeHandler = e => {\r\n    setSearch(e.target.value)\r\n  }\r\n\r\n  function bookmode() {\r\n    if (!invested) {\r\n      setbook(!book);\r\n    }\r\n    else {\r\n      setinvested(!invested);\r\n      setbook(!book);\r\n    }\r\n  }\r\n\r\n  function investmode() {\r\n    if (!book) {\r\n      setinvested(!invested);\r\n    }\r\n    else {\r\n      setinvested(!invested);\r\n      setbook(!book);\r\n    }\r\n  }\r\n\r\n  function home() {\r\n    setbook(false);\r\n    setinvested(false);\r\n  }\r\n\r\n  function setCurrency(id) {\r\n    setcur(id);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${cur}&order=market_cap_desc&per_page=100&page=1&sparkline=false`)\r\n      .then(res => {\r\n        setCoins(res.data);\r\n      }).catch(err => {\r\n        console.log(err);\r\n        alert('Error with loading API, please contact administrator.');\r\n      });\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <nav className=\"navbar\">\r\n        <NavBar\r\n          book={book}\r\n          bookmode={bookmode}\r\n          invested={invested}\r\n          investmode={investmode}\r\n          changeHandler={changeHandler}\r\n          home={home}\r\n          setCur={setCurrency}\r\n          coins={setCoins}\r\n        />\r\n      </nav>\r\n\r\n      {(() => {\r\n        if (invested === true) {\r\n          if (localStorage.getItem(\"curCalc\") === null) {\r\n            return (\r\n              <Notice text={\"There are no calculations chosen\"} />\r\n            )\r\n          }\r\n          else {\r\n            return (\r\n              <CoinListInvested search={search} coins={coins} cur={cur} />\r\n            )\r\n          }\r\n        }\r\n        else if (book === true) {\r\n          if (localStorage.getItem(\"book\") === null) {\r\n            return (\r\n              <Notice text={\"There are no favourites chosen\"} />\r\n            )\r\n          }\r\n          else {\r\n            return (\r\n              <CoinListBook search={search} coins={coins} cur={cur} />\r\n            )\r\n          }\r\n        }\r\n        else {\r\n          return (\r\n            <CoinListAll search={search} coins={coins} cur={cur} />\r\n\r\n          )\r\n        }\r\n      })()}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","C:\\Users\\Michal\\Desktop\\TW\\CryptoCalc\\src\\components\\NavBar.js",[],"C:\\Users\\Michal\\Desktop\\TW\\CryptoCalc\\src\\components\\CoinListAll.js",[],"C:\\Users\\Michal\\Desktop\\TW\\CryptoCalc\\src\\components\\Notice.js",[],"C:\\Users\\Michal\\Desktop\\TW\\CryptoCalc\\src\\components\\CoinListBook.js",[],"C:\\Users\\Michal\\Desktop\\TW\\CryptoCalc\\src\\components\\CoinListInvested.js",[],"C:\\Users\\Michal\\Desktop\\TW\\CryptoCalc\\src\\components\\Coin.js",["170"],"import React, { useState } from 'react'\r\nimport '../styles/coin.css'\r\nimport curmap from '../JSON/cur.json'\r\nimport { AiOutlineStock } from \"react-icons/ai\";\r\nimport { IoMdHeartEmpty } from \"react-icons/io\";\r\nimport { BsCheck } from \"react-icons/bs\";\r\nimport { IoMdHeart } from \"react-icons/io\";\r\nimport Popup from './Popup';\r\nimport '../styles/popup.css'\r\n\r\nlet parser;\r\nlet currency;\r\nlet str = \"\";\r\nlet obj = {};\r\nlet array = [];\r\n\r\nconst Coin = ({ icon, coinName, symbol, price, volume, priceChange24, marketcap, cur, id, del }) => {\r\n\r\n    parser = JSON.parse(localStorage.getItem(\"cur\"));\r\n    currency = parser.name;\r\n\r\n    const [bookmark, setbookmark] = useState(() => {\r\n        if (localStorage.getItem(\"book\") !== null && localStorage.getItem(\"book\").includes(id)) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    });\r\n\r\n    const [closePopup, setclosePopup] = useState(false)\r\n    const [iconColor, seticonColor] = useState(() => {\r\n        if (localStorage.getItem(\"curCalc\") !== null && localStorage.getItem(\"curCalc\").includes(id)) {\r\n            return \"green\";\r\n        }\r\n        else {\r\n            return \"white\";\r\n        }\r\n    })\r\n    const [investedValue, setinvestedValue] = useState(null)\r\n    const [inputColor, setInputColor] = useState({ borderColor: \"white\" })\r\n\r\n\r\n\r\n\r\n    function addBookmark() {\r\n        if (bookmark) {\r\n            setbookmark(false)\r\n            if (del != null) {\r\n                del(id);\r\n            }\r\n            str = localStorage.getItem(\"book\");\r\n            str = str.replace(`\"${id}\" `, \"\");\r\n            if (str.length <= 0) {\r\n                localStorage.removeItem(\"book\");\r\n            }\r\n            else {\r\n                localStorage.setItem(\"book\", str);\r\n            }\r\n\r\n        }\r\n        else {\r\n            setbookmark(true);\r\n            str = str + `\"${id}\" `\r\n            localStorage.setItem(\"book\", str);\r\n        }\r\n    }\r\n\r\n\r\n    function setInvest(value) {\r\n        if (value.target.validity.valid) {\r\n            setinvestedValue(value.target.value);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"coin-container\">\r\n            <div className=\"coin-row\">\r\n                <span className=\"bookmark\" onClick={addBookmark}  >\r\n                    {(() => {\r\n                        if (bookmark === true) {\r\n                            return (\r\n                                <IoMdHeart size={20} color={\"red\"} />\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <IoMdHeartEmpty size={20} />\r\n                            )\r\n                        }\r\n                    })()}\r\n\r\n                </span>\r\n                <div className=\"coin\">\r\n                    <span className=\"coinName\">\r\n                        <img src={icon} alt=\"icon\" />\r\n                        <h1>{coinName}</h1>\r\n                    </span>\r\n                    <p className=\"coin-symbol\">{symbol.toLocaleString().toUpperCase()}</p>\r\n                </div>\r\n                <div className=\"coin-data\">\r\n                    <p className=\"coin-price\">{currency}{price}</p>\r\n                    <p className=\"coin-volume\">{currency}{volume.toLocaleString()}</p>\r\n                    {priceChange24 < 0 ? (\r\n                        <p className=\"coin-perc-red\">{priceChange24.toFixed(2)}%</p>\r\n                    ) : (\r\n                        <p className=\"coin-perc-green\">{priceChange24.toFixed(2)}%</p>\r\n                    )}\r\n                    <p className=\"coin-marketcap\">\r\n                        {currency}{marketcap.toLocaleString()}\r\n                    </p>\r\n                    <span className=\"calc\" onClick={() => setclosePopup(true)}>\r\n                        <AiOutlineStock size={50} color={iconColor} />\r\n                    </span>\r\n                </div>\r\n\r\n                <Popup open={closePopup} setOpen={setclosePopup} setInvest={setInvest} setCloseColor={seticonColor} title={coinName} color={setInputColor} style={inputColor}>\r\n                    <span className=\"button\" onClick={() => {\r\n                        if (investedValue) {\r\n                            obj = { \"id\": id, \"invested\": investedValue, \"cur\": cur, \"price\": price }\r\n                            array.unshift(obj)\r\n                            localStorage.setItem(\"curCalc\", JSON.stringify(array));\r\n                            seticonColor(\"green\");\r\n                            setInputColor({ borderColor: \"white\" })\r\n                            setclosePopup(false)\r\n                        }\r\n                        else {\r\n                            setInputColor({ border: \"3px solid red\" })\r\n                        }\r\n\r\n                    }}><BsCheck size={25} /></span>\r\n                </Popup>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Coin\r\n","C:\\Users\\Michal\\Desktop\\TW\\CryptoCalc\\src\\components\\PlaceholderSpec.js",[],"C:\\Users\\Michal\\Desktop\\TW\\CryptoCalc\\src\\components\\CoinSpec.js",["171","172"],"import React, { useState } from 'react'\r\nimport { MdClear } from \"react-icons/md\";\r\nimport curmap from '../JSON/cur.json'\r\nimport '../styles/coin.css'\r\nlet currency;\r\nlet coin;\r\n\r\nconst CoinSpec = ({ icon, coinName, symbol, price, cur, id, del }) => {\r\n\r\n    for (let i = 0; i < curmap.length; i++) {\r\n        if (curmap[i].id === cur) {\r\n            currency = curmap[i].name.toLocaleString();\r\n        }\r\n    }\r\n\r\n    function getOBJ() {\r\n        let obj = JSON.parse(localStorage.getItem(\"curCalc\"));\r\n        for (let i = 0; i < obj.length; i++) {\r\n            if (obj[i].id === id) {\r\n                return obj[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    coin = getOBJ();\r\n\r\n\r\n    const [invested, setinvested] = useState(coin.invested)\r\n    const [oldValue, setoldValue] = useState(coin.price)\r\n\r\n    return (\r\n        <div className=\"coin-container\">\r\n            <div className=\"coin-row\">\r\n                <span className=\"bookmark\" onClick={() => del(id)}>\r\n                    <MdClear size={20} color={\"red\"} />\r\n                </span>\r\n                <div className=\"coin\">\r\n                    <span className=\"coinName\">\r\n                        <img src={icon} alt=\"icon\" />\r\n                        <h1>{coinName}</h1>\r\n                    </span>\r\n                    <p className=\"coin-symbol\">{symbol.toLocaleString().toUpperCase()}</p>\r\n                </div>\r\n                <div className=\"coin-data\">\r\n                    <p className=\"coin-price\">{currency}{price}</p>\r\n                    {(() => {\r\n                        if (oldValue > 0 && invested > 0) {\r\n                            console.log(oldValue);\r\n                            return (\r\n                                <p className=\"amount\">{(invested / oldValue).toFixed(5).toLocaleString()}</p>\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <p className=\"amount\">Error</p>\r\n                            )\r\n                        }\r\n                    })()}\r\n                    <p className=\"coin-invested\">{currency}{invested.toLocaleString()}</p>\r\n                    <p className=\"coin-profit\">{currency}{(price * (invested / oldValue)).toFixed(2).toLocaleString()}</p>\r\n                    {((price * (invested / oldValue)) - invested) > 0 ? (\r\n                        <p className=\"coin-perc-green\">\r\n                            {currency}{((price * (invested / oldValue)) - invested).toFixed(2).toLocaleString()}\r\n                        </p>\r\n                    ) : (\r\n                        <p className=\"coin-perc-red\">\r\n                            {currency}{((price * (invested / oldValue)) - invested).toFixed(2).toLocaleString()}\r\n                        </p>\r\n                    )\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoinSpec\r\n","C:\\Users\\Michal\\Desktop\\TW\\CryptoCalc\\src\\components\\Placeholder.js",[],"C:\\Users\\Michal\\Desktop\\TW\\CryptoCalc\\src\\components\\Popup.js",[],"C:\\Users\\Michal\\Desktop\\TW\\CryptoCalc\\src\\components\\Dropdown.js",[],"C:\\Users\\Michal\\Desktop\\tw\\CryptoCalc\\src\\index.js",[],["173","174"],"C:\\Users\\Michal\\Desktop\\tw\\CryptoCalc\\src\\App.js",["175"],"C:\\Users\\Michal\\Desktop\\tw\\CryptoCalc\\src\\components\\CoinListAll.js",[],"C:\\Users\\Michal\\Desktop\\tw\\CryptoCalc\\src\\components\\CoinListBook.js",[],"C:\\Users\\Michal\\Desktop\\tw\\CryptoCalc\\src\\components\\Notice.js",[],"C:\\Users\\Michal\\Desktop\\tw\\CryptoCalc\\src\\components\\NavBar.js",[],"C:\\Users\\Michal\\Desktop\\tw\\CryptoCalc\\src\\components\\CoinListInvested.js",[],"C:\\Users\\Michal\\Desktop\\tw\\CryptoCalc\\src\\components\\Placeholder.js",[],"C:\\Users\\Michal\\Desktop\\tw\\CryptoCalc\\src\\components\\PlaceholderSpec.js",[],"C:\\Users\\Michal\\Desktop\\tw\\CryptoCalc\\src\\components\\Dropdown.js",[],"C:\\Users\\Michal\\Desktop\\tw\\CryptoCalc\\src\\components\\Coin.js",["176"],"C:\\Users\\Michal\\Desktop\\tw\\CryptoCalc\\src\\components\\CoinSpec.js",["177","178"],"C:\\Users\\Michal\\Desktop\\tw\\CryptoCalc\\src\\components\\Popup.js",[],"C:\\Users\\Michal\\Desktop\\git\\CryptoCalc\\src\\index.js",[],"C:\\Users\\Michal\\Desktop\\git\\CryptoCalc\\src\\App.js",["179"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport NavBar from './components/NavBar';\r\nimport CoinListAll from './components/CoinListAll';\r\nimport CoinListBook from './components/CoinListBook';\r\nimport CoinListInvested from './components/CoinListInvested';\r\nimport Notice from './components/Notice';\r\nlet curr;\r\n\r\nfunction App() {\r\n\r\n  const [coins, setCoins] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [cur, setcur] = useState(()=>{\r\n    curr = localStorage.getItem(\"curr\");\r\n    if(curr){\r\n      return curr.id;\r\n    }\r\n    else{\r\n      localStorage.setItem(\"cur\", JSON.stringify({ \"id\": \"usd\", \"name\": \"$ \"}))\r\n      return \"usd\";\r\n    }\r\n  })\r\n  const [book, setbook] = useState(false);\r\n  const [invested, setinvested] = useState(false);\r\n\r\n\r\n\r\n  const changeHandler = e => {\r\n    setSearch(e.target.value)\r\n  }\r\n\r\n  function bookmode() {\r\n    if (!invested) {\r\n      setbook(!book);\r\n    }\r\n    else {\r\n      setinvested(!invested);\r\n      setbook(!book);\r\n    }\r\n  }\r\n\r\n  function investmode() {\r\n    if (!book) {\r\n      setinvested(!invested);\r\n    }\r\n    else {\r\n      setinvested(!invested);\r\n      setbook(!book);\r\n    }\r\n  }\r\n\r\n  function home() {\r\n    setbook(false);\r\n    setinvested(false);\r\n  }\r\n\r\n  function setCurrency(id) {\r\n    setcur(id);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${cur}&order=market_cap_desc&per_page=100&page=1&sparkline=false`)\r\n      .then(res => {\r\n        setCoins(res.data);\r\n      }).catch(err => {\r\n        console.log(err);\r\n        alert('Error with loading API, please contact administrator.');\r\n      });\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <nav className=\"navbar\">\r\n        <NavBar\r\n          book={book}\r\n          bookmode={bookmode}\r\n          invested={invested}\r\n          investmode={investmode}\r\n          changeHandler={changeHandler}\r\n          home={home}\r\n          setCur={setCurrency}\r\n          coins={setCoins}\r\n        />\r\n      </nav>\r\n\r\n      {(() => {\r\n        if (invested === true) {\r\n          if (localStorage.getItem(\"curCalc\") === null) {\r\n            return (\r\n              <Notice text={\"There are no calculations chosen\"} />\r\n            )\r\n          }\r\n          else {\r\n            return (\r\n              <CoinListInvested search={search} coins={coins} cur={cur} />\r\n            )\r\n          }\r\n        }\r\n        else if (book === true) {\r\n          if (localStorage.getItem(\"book\") === null) {\r\n            return (\r\n              <Notice text={\"There are no favourites chosen\"} />\r\n            )\r\n          }\r\n          else {\r\n            return (\r\n              <CoinListBook search={search} coins={coins} cur={cur} />\r\n            )\r\n          }\r\n        }\r\n        else {\r\n          return (\r\n            <CoinListAll search={search} coins={coins} cur={cur} />\r\n\r\n          )\r\n        }\r\n      })()}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","C:\\Users\\Michal\\Desktop\\git\\CryptoCalc\\src\\components\\Notice.js",[],"C:\\Users\\Michal\\Desktop\\git\\CryptoCalc\\src\\components\\CoinListAll.js",[],"C:\\Users\\Michal\\Desktop\\git\\CryptoCalc\\src\\components\\CoinListBook.js",[],"C:\\Users\\Michal\\Desktop\\git\\CryptoCalc\\src\\components\\CoinListInvested.js",[],"C:\\Users\\Michal\\Desktop\\git\\CryptoCalc\\src\\components\\NavBar.js",[],"C:\\Users\\Michal\\Desktop\\git\\CryptoCalc\\src\\components\\Placeholder.js",[],"C:\\Users\\Michal\\Desktop\\git\\CryptoCalc\\src\\components\\Coin.js",["180"],"import React, { useState } from 'react'\r\nimport '../styles/coin.css'\r\nimport curmap from '../JSON/cur.json'\r\nimport { AiOutlineStock } from \"react-icons/ai\";\r\nimport { IoMdHeartEmpty } from \"react-icons/io\";\r\nimport { BsCheck } from \"react-icons/bs\";\r\nimport { IoMdHeart } from \"react-icons/io\";\r\nimport Popup from './Popup';\r\nimport '../styles/popup.css'\r\n\r\nlet parser;\r\nlet currency;\r\nlet str = \"\";\r\nlet obj = {};\r\nlet array = [];\r\n\r\nconst Coin = ({ icon, coinName, symbol, price, volume, priceChange24, marketcap, cur, id, del }) => {\r\n\r\n\r\n    parser = JSON.parse(localStorage.getItem(\"cur\"));\r\n    currency = parser.name;\r\n\r\n\r\n    const [bookmark, setbookmark] = useState(() => {\r\n        if (localStorage.getItem(\"book\") !== null && localStorage.getItem(\"book\").includes(id)) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    });\r\n\r\n    const [closePopup, setclosePopup] = useState(false)\r\n    const [iconColor, seticonColor] = useState(() => {\r\n        if (localStorage.getItem(\"curCalc\") !== null && localStorage.getItem(\"curCalc\").includes(id)) {\r\n            return \"green\";\r\n        }\r\n        else {\r\n            return \"white\";\r\n        }\r\n    })\r\n    const [investedValue, setinvestedValue] = useState(null)\r\n    const [inputColor, setInputColor] = useState({ borderColor: \"white\" })\r\n\r\n\r\n\r\n\r\n    function addBookmark() {\r\n        if (bookmark) {\r\n            setbookmark(false)\r\n            if (del != null) {\r\n                del(id);\r\n            }\r\n            str = localStorage.getItem(\"book\");\r\n            str = str.replace(`\"${id}\" `, \"\");\r\n            if (str.length <= 0) {\r\n                localStorage.removeItem(\"book\");\r\n            }\r\n            else {\r\n                localStorage.setItem(\"book\", str);\r\n            }\r\n\r\n        }\r\n        else {\r\n            setbookmark(true);\r\n            str = str + `\"${id}\" `\r\n            localStorage.setItem(\"book\", str);\r\n        }\r\n    }\r\n\r\n\r\n    function setInvest(value) {\r\n        if (value.target.validity.valid) {\r\n            setinvestedValue(value.target.value);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"coin-container\">\r\n            <div className=\"coin-row\">\r\n                <span className=\"bookmark\" onClick={addBookmark}  >\r\n                    {(() => {\r\n                        if (bookmark === true) {\r\n                            return (\r\n                                <IoMdHeart size={20} color={\"red\"} />\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <IoMdHeartEmpty size={20} />\r\n                            )\r\n                        }\r\n                    })()}\r\n\r\n                </span>\r\n                <div className=\"coin\">\r\n                    <span className=\"coinName\">\r\n                        <img src={icon} alt=\"icon\" />\r\n                        <h1>{coinName}</h1>\r\n                    </span>\r\n                    <p className=\"coin-symbol\">{symbol.toLocaleString().toUpperCase()}</p>\r\n                </div>\r\n                <div className=\"coin-data\">\r\n                    <p className=\"coin-price\">{currency}{price}</p>\r\n                    <p className=\"coin-volume\">{currency}{volume.toLocaleString()}</p>\r\n                    {priceChange24 < 0 ? (\r\n                        <p className=\"coin-perc-red\">{priceChange24.toFixed(2)}%</p>\r\n                    ) : (\r\n                        <p className=\"coin-perc-green\">{priceChange24.toFixed(2)}%</p>\r\n                    )}\r\n                    <p className=\"coin-marketcap\">\r\n                        {currency}{marketcap.toLocaleString()}\r\n                    </p>\r\n                    <span className=\"calc\" onClick={() => setclosePopup(true)}>\r\n                        <AiOutlineStock size={50} color={iconColor} />\r\n                    </span>\r\n                </div>\r\n\r\n                <Popup open={closePopup} setOpen={setclosePopup} setInvest={setInvest} setCloseColor={seticonColor} title={coinName} color={setInputColor} style={inputColor}>\r\n                    <span className=\"button\" onClick={() => {\r\n                        if (investedValue) {\r\n                            obj = { \"id\": id, \"invested\": investedValue, \"cur\": cur, \"price\": price }\r\n                            array.unshift(obj)\r\n                            localStorage.setItem(\"curCalc\", JSON.stringify(array));\r\n                            seticonColor(\"green\");\r\n                            setInputColor({ borderColor: \"white\" })\r\n                            setclosePopup(false)\r\n                        }\r\n                        else {\r\n                            setInputColor({ border: \"3px solid red\" })\r\n                        }\r\n\r\n                    }}><BsCheck size={25} /></span>\r\n                </Popup>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Coin\r\n","C:\\Users\\Michal\\Desktop\\git\\CryptoCalc\\src\\components\\PlaceholderSpec.js",[],"C:\\Users\\Michal\\Desktop\\git\\CryptoCalc\\src\\components\\Dropdown.js",[],"C:\\Users\\Michal\\Desktop\\git\\CryptoCalc\\src\\components\\CoinSpec.js",["181","182"],"C:\\Users\\Michal\\Desktop\\git\\CryptoCalc\\src\\components\\Popup.js",[],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":71,"column":6,"nodeType":"189","endLine":71,"endColumn":8,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":3,"column":8,"nodeType":"193","messageId":"194","endLine":3,"endColumn":14},{"ruleId":"191","severity":1,"message":"195","line":28,"column":22,"nodeType":"193","messageId":"194","endLine":28,"endColumn":33},{"ruleId":"191","severity":1,"message":"196","line":29,"column":22,"nodeType":"193","messageId":"194","endLine":29,"endColumn":33},{"ruleId":"183","replacedBy":"197"},{"ruleId":"185","replacedBy":"198"},{"ruleId":"187","severity":1,"message":"188","line":72,"column":6,"nodeType":"189","endLine":72,"endColumn":8,"suggestions":"199"},{"ruleId":"191","severity":1,"message":"192","line":3,"column":8,"nodeType":"193","messageId":"194","endLine":3,"endColumn":14},{"ruleId":"191","severity":1,"message":"195","line":28,"column":22,"nodeType":"193","messageId":"194","endLine":28,"endColumn":33},{"ruleId":"191","severity":1,"message":"196","line":29,"column":22,"nodeType":"193","messageId":"194","endLine":29,"endColumn":33},{"ruleId":"187","severity":1,"message":"188","line":72,"column":6,"nodeType":"189","endLine":72,"endColumn":8,"suggestions":"200"},{"ruleId":"191","severity":1,"message":"192","line":3,"column":8,"nodeType":"193","messageId":"194","endLine":3,"endColumn":14},{"ruleId":"191","severity":1,"message":"195","line":28,"column":22,"nodeType":"193","messageId":"194","endLine":28,"endColumn":33},{"ruleId":"191","severity":1,"message":"196","line":29,"column":22,"nodeType":"193","messageId":"194","endLine":29,"endColumn":33},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cur'. Either include it or remove the dependency array.","ArrayExpression",["203"],"no-unused-vars","'curmap' is defined but never used.","Identifier","unusedVar","'setinvested' is assigned a value but never used.","'setoldValue' is assigned a value but never used.",["201"],["202"],["204"],["205"],"no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"desc":"206","fix":"208"},{"desc":"206","fix":"209"},"Update the dependencies array to be: [cur]",{"range":"210","text":"211"},{"range":"212","text":"211"},{"range":"213","text":"211"},[1629,1631],"[cur]",[1710,1712],[1710,1712]]