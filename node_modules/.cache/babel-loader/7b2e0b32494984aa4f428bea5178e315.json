{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michal\\\\Desktop\\\\TW\\\\CryptoCalc\\\\src\\\\components\\\\CoinSpec.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { MdClear } from \"react-icons/md\";\nimport curmap from '../JSON/cur.json';\nimport '../styles/coin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet currency;\nlet coin;\n\nconst CoinSpec = ({\n  icon,\n  coinName,\n  symbol,\n  price,\n  cur,\n  id,\n  del\n}) => {\n  _s();\n\n  for (let i = 0; i < curmap.length; i++) {\n    if (curmap[i].id === cur) {\n      currency = curmap[i].name.toLocaleString();\n    }\n  }\n\n  const [invested, setinvested] = useState(100);\n  const [oldValue, setoldValue] = useState(100);\n\n  function getOBJ() {\n    let obj = JSON.parse(localStorage.getItem(\"curCalc\"));\n\n    for (let i = 0; i < obj.length; i++) {\n      if (obj[i].id === id) {\n        return obj[i];\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coin-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coin-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bookmark\",\n        onClick: () => del(id),\n        children: /*#__PURE__*/_jsxDEV(MdClear, {\n          size: 20,\n          color: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coin\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"coinName\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: icon,\n            alt: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: coinName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coin-symbol\",\n          children: symbol.toLocaleString().toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coin-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coin-price\",\n          children: [currency, price.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), (() => {\n          if (oldValue > 0 && invested > 0) {\n            console.log(oldValue);\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"amount\",\n              children: (invested / oldValue).toFixed(5).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"amount\",\n              children: \"Error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this);\n          }\n        })(), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coin-invested\",\n          children: [currency, invested.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coin-profit\",\n          children: [currency, (price * (invested / oldValue)).toFixed(2).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), price * (invested / oldValue) - invested > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coin-perc-green\",\n          children: [currency, (price * (invested / oldValue) - invested).toFixed(2).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coin-perc-red\",\n          children: [currency, (price * (invested / oldValue) - invested).toFixed(2).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CoinSpec, \"co51pyRdHGUqEAGUNnXwImD25V0=\");\n\n_c = CoinSpec;\nexport default CoinSpec;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinSpec\");","map":{"version":3,"sources":["C:/Users/Michal/Desktop/TW/CryptoCalc/src/components/CoinSpec.js"],"names":["React","useState","MdClear","curmap","currency","coin","CoinSpec","icon","coinName","symbol","price","cur","id","del","i","length","name","toLocaleString","invested","setinvested","oldValue","setoldValue","getOBJ","obj","JSON","parse","localStorage","getItem","toUpperCase","console","log","toFixed"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { MdClear } from \"react-icons/md\";\r\nimport curmap from '../JSON/cur.json'\r\nimport '../styles/coin.css'\r\nlet currency;\r\nlet coin\r\n\r\nconst CoinSpec = ({ icon, coinName, symbol, price, cur, id, del }) => {\r\n\r\n    for (let i = 0; i < curmap.length; i++) {\r\n        if (curmap[i].id === cur) {\r\n            currency = curmap[i].name.toLocaleString();\r\n        }\r\n    }\r\n\r\n\r\n    const [invested, setinvested] = useState(100)\r\n    const [oldValue, setoldValue] = useState(100)\r\n\r\n    function getOBJ() {\r\n       let obj = JSON.parse(localStorage.getItem(\"curCalc\"));\r\n        for (let i = 0; i < obj.length; i++) {\r\n            if (obj[i].id === id) {\r\n                return obj[i];\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"coin-container\">\r\n            <div className=\"coin-row\">\r\n                <span className=\"bookmark\" onClick={() => del(id)}>\r\n                    <MdClear size={20} color={\"red\"} />\r\n                </span>\r\n                <div className=\"coin\">\r\n                    <span className=\"coinName\">\r\n                        <img src={icon} alt=\"icon\" />\r\n                        <h1>{coinName}</h1>\r\n                    </span>\r\n                    <p className=\"coin-symbol\">{symbol.toLocaleString().toUpperCase()}</p>\r\n                </div>\r\n                <div className=\"coin-data\">\r\n                    <p className=\"coin-price\">{currency}{price.toLocaleString()}</p>\r\n                    {(() => {\r\n                        if (oldValue > 0 && invested > 0) {\r\n                            console.log(oldValue);\r\n                            return (\r\n                                <p className=\"amount\">{(invested / oldValue).toFixed(5).toLocaleString()}</p>\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <p className=\"amount\">Error</p>\r\n                            )\r\n                        }\r\n                    })()}\r\n                    <p className=\"coin-invested\">{currency}{invested.toLocaleString()}</p>\r\n                    <p className=\"coin-profit\">{currency}{(price * (invested / oldValue)).toFixed(2).toLocaleString()}</p>\r\n                    {((price * (invested / oldValue)) - invested) > 0 ? (\r\n                        <p className=\"coin-perc-green\">\r\n                            {currency}{((price * (invested / oldValue)) - invested).toFixed(2).toLocaleString()}\r\n                        </p>\r\n                    ) : (\r\n                        <p className=\"coin-perc-red\">\r\n                            {currency}{((price * (invested / oldValue)) - invested).toFixed(2).toLocaleString()}\r\n                        </p>\r\n                    )\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoinSpec\r\n"]},"metadata":{},"sourceType":"module"}