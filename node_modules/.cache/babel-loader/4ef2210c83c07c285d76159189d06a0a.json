{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michal\\\\Desktop\\\\TW\\\\CryptoCalc\\\\src\\\\components\\\\CoinSpec.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { MdClear } from \"react-icons/md\";\nimport curmap from '../JSON/cur.json';\nimport '../styles/coin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet currency;\nlet str;\nlet substr;\n\nconst CoinSpec = ({\n  icon,\n  coinName,\n  symbol,\n  price,\n  cur,\n  id,\n  del\n}) => {\n  _s();\n\n  for (let i = 0; i < curmap.length; i++) {\n    if (curmap[i].id === cur) {\n      currency = curmap[i].name.toLocaleString();\n    }\n  }\n\n  str = localStorage.getItem(id);\n  substr = str.split(\"|\");\n  const [invested, setinvested] = useState(substr[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coin-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coin-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bookmark\",\n        onClick: () => del(id),\n        children: /*#__PURE__*/_jsxDEV(MdClear, {\n          size: 20,\n          color: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coin\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"coinName\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: icon,\n            alt: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: coinName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coin-symbol\",\n          children: symbol.toLocaleString().toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coin-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coin-price\",\n          children: [currency, price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), (() => {\n          if (price > 0 && invested > 0) {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"amount\",\n              children: (invested / price).toFixed(5)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"amount\",\n              children: \"Error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this);\n          }\n        })(), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coin-invested\",\n          children: [currency, invested.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), priceChange24 < 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coin-perc-red\",\n          children: [priceChange24.toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coin-perc-green\",\n          children: [priceChange24.toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coin-profit\",\n          children: [currency, (price * (invested / price)).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CoinSpec, \"Q1cX2xaL5YM8C2FmHqhfTOBp/pE=\");\n\n_c = CoinSpec;\nexport default CoinSpec;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinSpec\");","map":{"version":3,"sources":["C:/Users/Michal/Desktop/TW/CryptoCalc/src/components/CoinSpec.js"],"names":["React","useState","MdClear","curmap","currency","str","substr","CoinSpec","icon","coinName","symbol","price","cur","id","del","i","length","name","toLocaleString","localStorage","getItem","split","invested","setinvested","toUpperCase","toFixed","priceChange24"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAO,oBAAP;;AACA,IAAIC,QAAJ;AACA,IAAIC,GAAJ;AACA,IAAIC,MAAJ;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,MAAlB;AAA0BC,EAAAA,KAA1B;AAAiCC,EAAAA,GAAjC;AAAsCC,EAAAA,EAAtC;AAA0CC,EAAAA;AAA1C,CAAD,KAAqD;AAAA;;AAElE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,MAAM,CAACa,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpC,QAAIZ,MAAM,CAACY,CAAD,CAAN,CAAUF,EAAV,KAAiBD,GAArB,EAA0B;AACtBR,MAAAA,QAAQ,GAAGD,MAAM,CAACY,CAAD,CAAN,CAAUE,IAAV,CAAeC,cAAf,EAAX;AACH;AACJ;;AAEDb,EAAAA,GAAG,GAAGc,YAAY,CAACC,OAAb,CAAqBP,EAArB,CAAN;AACAP,EAAAA,MAAM,GAAGD,GAAG,CAACgB,KAAJ,CAAU,GAAV,CAAT;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAACK,MAAM,CAAC,CAAD,CAAP,CAAxC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAM,QAAA,SAAS,EAAC,UAAhB;AAA2B,QAAA,OAAO,EAAE,MAAMQ,GAAG,CAACD,EAAD,CAA7C;AAAA,+BACI,QAAC,OAAD;AAAS,UAAA,IAAI,EAAE,EAAf;AAAmB,UAAA,KAAK,EAAE;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA,kCACI;AAAK,YAAA,GAAG,EAAEL,IAAV;AAAgB,YAAA,GAAG,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA,oBAA4BC,MAAM,CAACQ,cAAP,GAAwBM,WAAxB;AAA5B;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAWI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA,qBAA2BpB,QAA3B,EAAqCO,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,CAAC,MAAM;AACJ,cAAIA,KAAK,GAAG,CAAR,IAAaW,QAAQ,GAAG,CAA5B,EAA+B;AAC3B,gCACI;AAAG,cAAA,SAAS,EAAC,QAAb;AAAA,wBAAuB,CAACA,QAAQ,GAACX,KAAV,EAAiBc,OAAjB,CAAyB,CAAzB;AAAvB;AAAA;AAAA;AAAA;AAAA,oBADJ;AAGH,WAJD,MAIO;AACH,gCACI;AAAG,cAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ;AAGH;AACJ,SAVA,GAFL,eAaI;AAAG,UAAA,SAAS,EAAC,eAAb;AAAA,qBAA8BrB,QAA9B,EAAwCkB,QAAQ,CAACJ,cAAT,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ,EAcKQ,aAAa,GAAG,CAAhB,gBACG;AAAG,UAAA,SAAS,EAAC,eAAb;AAAA,qBAA8BA,aAAa,CAACD,OAAd,CAAsB,CAAtB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,gBAGG;AAAG,UAAA,SAAS,EAAC,iBAAb;AAAA,qBAAgCC,aAAa,CAACD,OAAd,CAAsB,CAAtB,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBR,eAmBI;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA,qBACKrB,QADL,EACe,CAACO,KAAK,IAAEW,QAAQ,GAACX,KAAX,CAAN,EAAyBO,cAAzB,EADf;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuCH,CApDD;;GAAMX,Q;;KAAAA,Q;AAsDN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { MdClear } from \"react-icons/md\";\r\nimport curmap from '../JSON/cur.json'\r\nimport '../styles/coin.css'\r\nlet currency;\r\nlet str;\r\nlet substr;\r\n\r\nconst CoinSpec = ({ icon, coinName, symbol, price, cur, id, del }) => {\r\n\r\n    for (let i = 0; i < curmap.length; i++) {\r\n        if (curmap[i].id === cur) {\r\n            currency = curmap[i].name.toLocaleString();\r\n        }\r\n    }\r\n\r\n    str = localStorage.getItem(id);\r\n    substr = str.split(\"|\")\r\n\r\n    const [invested, setinvested] = useState(substr[0])\r\n\r\n    return (\r\n        <div className=\"coin-container\">\r\n            <div className=\"coin-row\">\r\n                <span className=\"bookmark\" onClick={() => del(id)}>\r\n                    <MdClear size={20} color={\"red\"} />\r\n                </span>\r\n                <div className=\"coin\">\r\n                    <span className=\"coinName\">\r\n                        <img src={icon} alt=\"icon\" />\r\n                        <h1>{coinName}</h1>\r\n                    </span>\r\n                    <p className=\"coin-symbol\">{symbol.toLocaleString().toUpperCase()}</p>\r\n                </div>\r\n                <div className=\"coin-data\">\r\n                    <p className=\"coin-price\">{currency}{price}</p>\r\n                    {(() => {\r\n                        if (price > 0 && invested > 0) {\r\n                            return (\r\n                                <p className=\"amount\">{(invested/price).toFixed(5)}</p>\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <p className=\"amount\">Error</p>\r\n                            )\r\n                        }\r\n                    })()}\r\n                    <p className=\"coin-invested\">{currency}{invested.toLocaleString()}</p>\r\n                    {priceChange24 < 0 ? (\r\n                        <p className=\"coin-perc-red\">{priceChange24.toFixed(2)}%</p>\r\n                    ) : (\r\n                        <p className=\"coin-perc-green\">{priceChange24.toFixed(2)}%</p>\r\n                    )}\r\n                    <p className=\"coin-profit\">\r\n                        {currency}{(price*(invested/price)).toLocaleString()}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoinSpec\r\n"]},"metadata":{},"sourceType":"module"}