{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michal\\\\Desktop\\\\git\\\\CryptoCalc\\\\src\\\\components\\\\CoinSpec.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { MdClear } from \"react-icons/md\";\nimport curmap from '../JSON/cur.json';\nimport '../styles/coin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet currency;\nlet str;\nlet substr;\n\nconst CoinSpec = ({\n  icon,\n  coinName,\n  symbol,\n  price,\n  priceChange24,\n  profit,\n  cur,\n  id\n}) => {\n  _s();\n\n  for (let i = 0; i < curmap.length; i++) {\n    if (curmap[i].id === cur) {\n      currency = curmap[i].name.toLocaleString();\n    }\n  }\n\n  const [invested, setinvested] = useState(null);\n  str = localStorage.getItem(id);\n  substr = str.split(\"|\");\n  setinvested(substr[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coin-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coin-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bookmark\",\n        children: /*#__PURE__*/_jsxDEV(MdClear, {\n          size: 20,\n          color: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coin\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: icon,\n          alt: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: coinName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coin-symbol\",\n          children: symbol.toLocaleString().toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coin-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coin-price\",\n          children: [currency, price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coin-invested\",\n          children: [currency, invested.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), priceChange24 < 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coin-perc-red\",\n          children: [priceChange24.toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coin-perc-green\",\n          children: [priceChange24.toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coin-profit\",\n          children: [currency, profit.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CoinSpec, \"OXGcSb6tnKEK1W8CrlgdSCnX4OI=\");\n\n_c = CoinSpec;\nexport default CoinSpec;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinSpec\");","map":{"version":3,"sources":["C:/Users/Michal/Desktop/git/CryptoCalc/src/components/CoinSpec.js"],"names":["React","useState","MdClear","curmap","currency","str","substr","CoinSpec","icon","coinName","symbol","price","priceChange24","profit","cur","id","i","length","name","toLocaleString","invested","setinvested","localStorage","getItem","split","toUpperCase","toFixed"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { MdClear } from \"react-icons/md\";\r\nimport curmap from '../JSON/cur.json'\r\nimport '../styles/coin.css'\r\nlet currency;\r\nlet str;\r\nlet substr;\r\n\r\nconst CoinSpec = ({ icon, coinName, symbol, price, priceChange24, profit, cur, id  }) => {\r\n\r\n    for (let i = 0; i < curmap.length; i++) {\r\n        if (curmap[i].id === cur) {\r\n            currency = curmap[i].name.toLocaleString();\r\n        }\r\n    }\r\n\r\n    const [invested, setinvested] = useState(null)\r\n    str = localStorage.getItem(id);\r\n    substr = str.split(\"|\")\r\n    setinvested(substr[0]);\r\n    \r\n\r\n    return (\r\n        <div className=\"coin-container\">\r\n            <div className=\"coin-row\">\r\n                <span className=\"bookmark\">\r\n                <MdClear size={20} color={\"red\"} />\r\n                </span>\r\n                <div className=\"coin\">\r\n                    <img src={icon} alt=\"icon\" />\r\n                    <h1>{coinName}</h1>\r\n                    <p className=\"coin-symbol\">{symbol.toLocaleString().toUpperCase()}</p>\r\n                </div>\r\n                <div className=\"coin-data\">\r\n                    <p className=\"coin-price\">{currency}{price}</p>\r\n                    <p className=\"coin-invested\">{currency}{invested.toLocaleString()}</p>\r\n                    {priceChange24 < 0 ? (\r\n                        <p className=\"coin-perc-red\">{priceChange24.toFixed(2)}%</p>\r\n                    ) : (\r\n                        <p className=\"coin-perc-green\">{priceChange24.toFixed(2)}%</p>\r\n                    )}\r\n                    <p className=\"coin-profit\">\r\n                        {currency}{profit.toLocaleString()}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoinSpec\r\n"]},"metadata":{},"sourceType":"module"}