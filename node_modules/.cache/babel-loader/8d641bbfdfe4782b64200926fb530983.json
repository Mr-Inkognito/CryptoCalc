{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michal\\\\Desktop\\\\TW\\\\CryptoCalc\\\\src\\\\components\\\\CoinListInvested.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PlaceholderSpec from './PlaceholderSpec';\nimport CoinSpec from './CoinSpec';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet obj;\n\nconst CoinListInvested = ({\n  search,\n  coins,\n  cur\n}) => {\n  _s();\n\n  const [filter, setfilter] = useState(coins);\n\n  const del = id => {\n    setfilter(coins.filter(coin => coin.id !== id));\n\n    for (let i = 0; i < obj.length; i++) {\n      if (obj[i].id == id) {\n        return true;\n      }\n    }\n  };\n\n  const coinFilter = filter.filter(coin => coin.name.toLowerCase().includes(search.toLowerCase()));\n\n  function getindex(id) {\n    obj = JSON.parse(localStorage.getItem(\"curCalc\"));\n\n    if (obj == null) {\n      return false;\n    }\n\n    for (let i = 0; i < obj.length; i++) {\n      if (obj[i].id == id) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PlaceholderSpec, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), coinFilter.map(coin => {\n      return getindex(coin.id) ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CoinSpec, {\n          coinName: coin.name,\n          icon: coin.image,\n          symbol: coin.symbol,\n          price: coin.current_price,\n          cur: cur,\n          id: coin.id,\n          del: del\n        }, coin.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this) : \"\";\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CoinListInvested, \"JLEx4Lv7CeA71zBZn45Bm7A4Mpw=\");\n\n_c = CoinListInvested;\nexport default CoinListInvested;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinListInvested\");","map":{"version":3,"sources":["C:/Users/Michal/Desktop/TW/CryptoCalc/src/components/CoinListInvested.js"],"names":["React","useState","PlaceholderSpec","CoinSpec","obj","CoinListInvested","search","coins","cur","filter","setfilter","del","id","coin","i","length","coinFilter","name","toLowerCase","includes","getindex","JSON","parse","localStorage","getItem","map","image","symbol","current_price"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,IAAIC,GAAJ;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA;AAAjB,CAAD,KAA4B;AAAA;;AAEjD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAACM,KAAD,CAApC;;AAEA,QAAMI,GAAG,GAAIC,EAAD,IAAQ;AAChBF,IAAAA,SAAS,CAACH,KAAK,CAACE,MAAN,CAAcI,IAAD,IAASA,IAAI,CAACD,EAAL,KAAYA,EAAlC,CAAD,CAAT;;AACA,SAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGV,GAAG,CAACW,MAAvB,EAA+BD,CAAC,EAAhC,EAAmC;AAC/B,UAAGV,GAAG,CAACU,CAAD,CAAH,CAAOF,EAAP,IAAaA,EAAhB,EAAmB;AACf,eAAO,IAAP;AACH;AACJ;AACJ,GAPD;;AASA,QAAMI,UAAU,GAAGP,MAAM,CAACA,MAAP,CAAcI,IAAI,IACjCA,IAAI,CAACI,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCb,MAAM,CAACY,WAAP,EAAjC,CADe,CAAnB;;AAIA,WAASE,QAAT,CAAkBR,EAAlB,EAAqB;AACjBR,IAAAA,GAAG,GAAGiB,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAN;;AACA,QAAGpB,GAAG,IAAE,IAAR,EAAa;AACT,aAAO,KAAP;AACH;;AACD,SAAI,IAAIU,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGV,GAAG,CAACW,MAAvB,EAA+BD,CAAC,EAAhC,EAAmC;AAC/B,UAAGV,GAAG,CAACU,CAAD,CAAH,CAAOF,EAAP,IAAaA,EAAhB,EAAmB;AACf,eAAO,IAAP;AACH;AACJ;;AACD,WAAO,KAAP;AACH;;AAGD,sBACI;AAAA,4BACA,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YADA,EAGII,UAAU,CAACS,GAAX,CAAeZ,IAAI,IAAI;AACnB,aAAQO,QAAQ,CAACP,IAAI,CAACD,EAAN,CAAT,gBACH;AAAA,+BACI,QAAC,QAAD;AAEI,UAAA,QAAQ,EAAEC,IAAI,CAACI,IAFnB;AAGI,UAAA,IAAI,EAAEJ,IAAI,CAACa,KAHf;AAII,UAAA,MAAM,EAAEb,IAAI,CAACc,MAJjB;AAKI,UAAA,KAAK,EAAEd,IAAI,CAACe,aALhB;AAMI,UAAA,GAAG,EAAEpB,GANT;AAOI,UAAA,EAAE,EAAEK,IAAI,CAACD,EAPb;AAQI,UAAA,GAAG,EAAED;AART,WACSE,IAAI,CAACD,EADd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADG,GAaF,EAbL;AAcH,KAfD,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CArDD;;GAAMP,gB;;KAAAA,gB;AAuDN,eAAeA,gBAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport PlaceholderSpec from './PlaceholderSpec';\r\nimport CoinSpec from './CoinSpec';\r\n\r\nlet obj;\r\n\r\nconst CoinListInvested = ({ search, coins, cur }) => {\r\n\r\n    const [filter, setfilter] = useState(coins)\r\n\r\n    const del = (id) => {\r\n        setfilter(coins.filter((coin)=> coin.id !== id))\r\n        for(let i = 0; i < obj.length; i++){\r\n            if(obj[i].id == id){\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    const coinFilter = filter.filter(coin =>\r\n        coin.name.toLowerCase().includes(search.toLowerCase())\r\n    )\r\n    \r\n    function getindex(id){\r\n        obj = JSON.parse(localStorage.getItem(\"curCalc\"));\r\n        if(obj==null){\r\n            return false;\r\n        }\r\n        for(let i = 0; i < obj.length; i++){\r\n            if(obj[i].id == id){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n        <PlaceholderSpec />\r\n        {\r\n            coinFilter.map(coin => {\r\n                return (getindex(coin.id)) ? (\r\n                    <div>\r\n                        <CoinSpec\r\n                            key={coin.id}\r\n                            coinName={coin.name}\r\n                            icon={coin.image}\r\n                            symbol={coin.symbol}\r\n                            price={coin.current_price}\r\n                            cur={cur}\r\n                            id={coin.id}\r\n                            del={del}\r\n                        />\r\n                    </div>\r\n                ) : (\"\");\r\n            })}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default CoinListInvested\r\n"]},"metadata":{},"sourceType":"module"}