{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michal\\\\Desktop\\\\TW\\\\CryptoCalc\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { AiOutlineStock } from \"react-icons/ai\";\nimport { IoMdHeart } from \"react-icons/io\";\nimport { IoMdHeartEmpty } from \"react-icons/io\";\nimport CoinListAll from './components/CoinListAll';\nimport CoinListBook from './components/CoinListBook';\nimport CoinListInvested from './components/CoinListInvested';\nimport Notice from './components/Notice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState('');\n  const [cur, setcur] = useState(\"usd\");\n  const [book, setbook] = useState(false);\n  const [invested, setinvested] = useState(false);\n\n  const changeHandler = e => {\n    setSearch(e.target.value);\n  };\n\n  function bookmode() {\n    if (book) {\n      setbook(false);\n    } else {\n      setbook(true);\n    }\n  }\n\n  function investmode() {\n    if (invested) {\n      setinvested(false);\n    } else {\n      setinvested(true);\n    }\n  }\n\n  useEffect(() => {\n    console.log(cur);\n    axios.get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${cur}&order=market_cap_desc&per_page=100&page=1&sparkline=false`).then(res => {\n      setCoins(res.data);\n    }).catch(err => {\n      console.log(err);\n      alert('Error');\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Bookmarks\",\n        onClick: bookmode,\n        children: (() => {\n          if (book === true) {\n            return /*#__PURE__*/_jsxDEV(IoMdHeart, {\n              size: 50,\n              color: \"red\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(IoMdHeartEmpty, {\n              size: 50,\n              color: \"red\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this);\n          }\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"investMark\",\n        onClick: investmode,\n        children: (() => {\n          if (invested === true) {\n            return /*#__PURE__*/_jsxDEV(AiOutlineStock, {\n              size: 50,\n              color: \"green\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(AiOutlineStock, {\n              size: 50,\n              color: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this);\n          }\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search\",\n          className: \"search-input\",\n          onChange: changeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), (() => {\n      if (invested === true) {\n        if (localStorage.getItem(\"curCalc\") === null) {\n          /*#__PURE__*/\n          _jsxDEV(Notice, {\n            text: \"There are no calculations chosen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(CoinListInvested, {\n            search: search,\n            coins: coins,\n            cur: cur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this);\n        }\n      } else if (book === true) {\n        if (localStorage.getItem(\"book\") === null) {\n          return /*#__PURE__*/_jsxDEV(Notice, {\n            text: \"There are no favourites chosen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(CoinListBook, {\n            search: search,\n            coins: coins,\n            cur: cur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this);\n        }\n      } else {\n        return /*#__PURE__*/_jsxDEV(CoinListAll, {\n          search: search,\n          coins: coins,\n          cur: cur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this);\n      }\n    })()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"1wU7klF5cCcliqg+yru6uOZ5/10=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Michal/Desktop/TW/CryptoCalc/src/App.js"],"names":["React","useState","useEffect","axios","AiOutlineStock","IoMdHeart","IoMdHeartEmpty","CoinListAll","CoinListBook","CoinListInvested","Notice","App","coins","setCoins","search","setSearch","cur","setcur","book","setbook","invested","setinvested","changeHandler","e","target","value","bookmode","investmode","console","log","get","then","res","data","catch","err","alert","localStorage","getItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAGb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACe,GAAD,EAAMC,MAAN,IAAgBhB,QAAQ,CAAC,KAAD,CAA9B;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,KAAD,CAAxC;;AAGA,QAAMqB,aAAa,GAAGC,CAAC,IAAI;AACzBR,IAAAA,SAAS,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAFD;;AAMA,WAASC,QAAT,GAAoB;AAClB,QAAIR,IAAJ,EAAU;AACRC,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD,KAFD,MAGK;AACHA,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF;;AAED,WAASQ,UAAT,GAAsB;AACpB,QAAIP,QAAJ,EAAc;AACZC,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAFD,MAGK;AACHA,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF;;AAIDnB,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,OAAO,CAACC,GAAR,CAAYb,GAAZ;AACAb,IAAAA,KAAK,CAAC2B,GAAN,CAAW,8DAA6Dd,GAAI,4DAA5E,EACGe,IADH,CACQC,GAAG,IAAI;AACXnB,MAAAA,QAAQ,CAACmB,GAAG,CAACC,IAAL,CAAR;AACD,KAHH,EAGKC,KAHL,CAGWC,GAAG,IAAI;AACdP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACAC,MAAAA,KAAK,CAAC,OAAD,CAAL;AACD,KANH;AAOD,GATQ,EASN,EATM,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,OAAO,EAAEV,QAApC;AAAA,kBACG,CAAC,MAAM;AACN,cAAIR,IAAI,KAAK,IAAb,EAAmB;AACjB,gCACE,QAAC,SAAD;AAAW,cAAA,IAAI,EAAE,EAAjB;AAAqB,cAAA,KAAK,EAAE;AAA5B;AAAA;AAAA;AAAA;AAAA,oBADF;AAGD,WAJD,MAIO;AACL,gCACE,QAAC,cAAD;AAAgB,cAAA,IAAI,EAAE,EAAtB;AAA0B,cAAA,KAAK,EAAE;AAAjC;AAAA;AAAA;AAAA;AAAA,oBADF;AAGD;AACF,SAVA;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,OAAO,EAAES,UAArC;AAAA,kBAEG,CAAC,MAAM;AACN,cAAIP,QAAQ,KAAK,IAAjB,EAAuB;AACrB,gCACE,QAAC,cAAD;AAAgB,cAAA,IAAI,EAAE,EAAtB;AAA0B,cAAA,KAAK,EAAE;AAAjC;AAAA;AAAA;AAAA;AAAA,oBADF;AAGD,WAJD,MAIO;AACL,gCACE,QAAC,cAAD;AAAgB,cAAA,IAAI,EAAE,EAAtB;AAA0B,cAAA,KAAK,EAAE;AAAjC;AAAA;AAAA;AAAA;AAAA,oBADF;AAGD;AACF,SAVA;AAFH;AAAA;AAAA;AAAA;AAAA,cAdF,eA4BE;AAAA,+BACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,QAA/B;AAAwC,UAAA,SAAS,EAAC,cAAlD;AAAiE,UAAA,QAAQ,EAAEE;AAA3E;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAmCG,CAAC,MAAM;AACN,UAAIF,QAAQ,KAAK,IAAjB,EAAuB;AACrB,YAAIiB,YAAY,CAACC,OAAb,CAAqB,SAArB,MAAoC,IAAxC,EAA8C;AAC5C;AAAA,kBAAC,MAAD;AAAQ,YAAA,IAAI,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA;AACD,SAFD,MAGK;AACH,8BACE,QAAC,gBAAD;AAAkB,YAAA,MAAM,EAAExB,MAA1B;AAAkC,YAAA,KAAK,EAAEF,KAAzC;AAAgD,YAAA,GAAG,EAAEI;AAArD;AAAA;AAAA;AAAA;AAAA,kBADF;AAGD;AACF,OATD,MAUK,IAAIE,IAAI,KAAK,IAAb,EAAmB;AACtB,YAAImB,YAAY,CAACC,OAAb,CAAqB,MAArB,MAAiC,IAArC,EAA2C;AACzC,8BACE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,kBADF;AAGD,SAJD,MAKK;AACH,8BACE,QAAC,YAAD;AAAc,YAAA,MAAM,EAAExB,MAAtB;AAA8B,YAAA,KAAK,EAAEF,KAArC;AAA4C,YAAA,GAAG,EAAEI;AAAjD;AAAA;AAAA;AAAA;AAAA,kBADF;AAGD;AACF,OAXI,MAYA;AACH,4BACE,QAAC,WAAD;AAAa,UAAA,MAAM,EAAEF,MAArB;AAA6B,UAAA,KAAK,EAAEF,KAApC;AAA2C,UAAA,GAAG,EAAEI;AAAhD;AAAA;AAAA;AAAA;AAAA,gBADF;AAID;AACF,KA7BA,GAnCH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqED;;GArHQL,G;;KAAAA,G;AAwHT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport { AiOutlineStock } from \"react-icons/ai\";\r\nimport { IoMdHeart } from \"react-icons/io\";\r\nimport { IoMdHeartEmpty } from \"react-icons/io\";\r\nimport CoinListAll from './components/CoinListAll';\r\nimport CoinListBook from './components/CoinListBook';\r\nimport CoinListInvested from './components/CoinListInvested';\r\nimport Notice from './components/Notice';\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n  const [coins, setCoins] = useState([])\r\n  const [search, setSearch] = useState('')\r\n  const [cur, setcur] = useState(\"usd\")\r\n  const [book, setbook] = useState(false)\r\n  const [invested, setinvested] = useState(false)\r\n\r\n\r\n  const changeHandler = e => {\r\n    setSearch(e.target.value)\r\n  }\r\n\r\n\r\n\r\n  function bookmode() {\r\n    if (book) {\r\n      setbook(false);\r\n    }\r\n    else {\r\n      setbook(true);\r\n    }\r\n  }\r\n\r\n  function investmode() {\r\n    if (invested) {\r\n      setinvested(false);\r\n    }\r\n    else {\r\n      setinvested(true);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(cur);\r\n    axios.get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${cur}&order=market_cap_desc&per_page=100&page=1&sparkline=false`)\r\n      .then(res => {\r\n        setCoins(res.data);\r\n      }).catch(err => {\r\n        console.log(err);\r\n        alert('Error');\r\n      });\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <nav className=\"navbar\">\r\n        <div className=\"Bookmarks\" onClick={bookmode}>\r\n          {(() => {\r\n            if (book === true) {\r\n              return (\r\n                <IoMdHeart size={50} color={\"red\"} />\r\n              )\r\n            } else {\r\n              return (\r\n                <IoMdHeartEmpty size={50} color={\"red\"} />\r\n              )\r\n            }\r\n          })()}\r\n        </div>\r\n        <div className=\"investMark\" onClick={investmode}>\r\n\r\n          {(() => {\r\n            if (invested === true) {\r\n              return (\r\n                <AiOutlineStock size={50} color={\"green\"} />\r\n              )\r\n            } else {\r\n              return (\r\n                <AiOutlineStock size={50} color={\"white\"} />\r\n              )\r\n            }\r\n          })()}\r\n        </div>\r\n        <form>\r\n          <input type=\"text\" placeholder=\"Search\" className=\"search-input\" onChange={changeHandler} />\r\n        </form>\r\n      </nav>\r\n\r\n\r\n      {(() => {\r\n        if (invested === true) {\r\n          if (localStorage.getItem(\"curCalc\") === null) {\r\n            <Notice text={\"There are no calculations chosen\"} />\r\n          }\r\n          else {\r\n            return (\r\n              <CoinListInvested search={search} coins={coins} cur={cur} />\r\n            )\r\n          }\r\n        }\r\n        else if (book === true) {\r\n          if (localStorage.getItem(\"book\") === null) {\r\n            return (\r\n              <Notice text={\"There are no favourites chosen\"} />\r\n            )\r\n          }\r\n          else {\r\n            return (\r\n              <CoinListBook search={search} coins={coins} cur={cur} />\r\n            )\r\n          }\r\n        }\r\n        else {\r\n          return (\r\n            <CoinListAll search={search} coins={coins} cur={cur} />\r\n\r\n          )\r\n        }\r\n      })()}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}